# .github/workflows/deploy-cloudrun.yml

name: Deploy to Cloud Run

on:
  push:
    branches:
      - master # Or your main deployment branch
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select the environment to deploy to
        default: Production - startup-connect-backend # Ensure this environment exists in GitHub

env:
  DOCKERFILE_RELATIVE_PATH: "backend/Dockerfile" # Path to your Dockerfile relative to the repo root
  DOCKER_BUILD_CONTEXT: "backend" # Context directory for docker build

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'Production - startup-connect-backend' }}
    permissions:
      contents: "read"
      id-token: "write" # This is crucial for Workload Identity Federation

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth # Assign an ID to reference outputs
        uses: "google-github-actions/auth@v2"
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }} # Use vars if not sensitive, or secrets if preferred
          service_account: ${{ secrets.SA_EMAIL }}
          workload_identity_provider: ${{ secrets.WIF_PROVIDER_FULL_PATH }}

      - name: Set up cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: ">=413.0.0"

      - name: Set up Google Cloud SDK and Configure Docker
        # automatically sets up Docker credential helper
        # using the credentials from the 'auth' step.
        run: gcloud --quiet auth configure-docker ${{vars.GCP_REGION}}-docker.pkg.dev

      - name: Build and push Docker image to Artifact Registry
        run: |
          # Construct the full image path using the correct Artifact Registry hostname
          # Format: <region>-docker.pkg.dev/<project-id>/<repo-name>/<image-name>:<tag>
          IMAGE_PATH="${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.AR_REPO_NAME }}/${{ vars.IMAGE_NAME }}:${{ github.sha }}"

          echo "Building image: ${IMAGE_PATH} from Dockerfile: ${{ env.DOCKERFILE_RELATIVE_PATH }} with context: ${{ env.DOCKER_BUILD_CONTEXT }}"
          docker build -t "${IMAGE_PATH}" -f "${{ env.DOCKERFILE_RELATIVE_PATH }}" "${{ env.DOCKER_BUILD_CONTEXT }}"

          echo "Pushing image to Artifact Registry..."
          docker push "${IMAGE_PATH}"

          echo "IMAGE_PATH=${IMAGE_PATH}" >> $GITHUB_ENV # Make image path available to subsequent steps

      - name: Deploy to Cloud Run
        # Using the dedicated Cloud Run deploy action for simplicity and robustness
        uses: "google-github-actions/deploy-cloudrun@v2"
        with:
          service: ${{ vars.CLOUD_RUN_SERVICE_NAME }}
          region: ${{ vars.GCP_REGION }}
          image: "${{ env.IMAGE_PATH }}" # Use the image path from the previous step
          platform: "managed"
          allow_unauthenticated: true # Use 'true' or 'false' for boolean flags
          min_instances: 0
          max_instances: 1
          project_id: ${{ vars.GCP_PROJECT_ID }}

      - name: Get Cloud Run service URL
        # Use the Cloud Run deploy action's output for the URL if available, or gcloud
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ vars.CLOUD_RUN_SERVICE_NAME }} \
            --region "${{ vars.GCP_REGION }}" \
            --project="${{ vars.GCP_PROJECT_ID }}" \
            --format="value(status.url)")
          echo "Cloud Run Service URL: ${SERVICE_URL}"
          echo "SERVICE_URL=${SERVICE_URL}" >> $GITHUB_ENV
