"""initial app setup

Revision ID: 76f873890966
Revises:
Create Date: 2025-07-09 05:34:20.600918

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "76f873890966"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column(
            "full_name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False
        ),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "role",
            sa.Enum("FOUNDER", "SUPPORTER", "INVESTOR", name="userrole"),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "hashed_password", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("reset_token", sqlmodel.sql.sqltypes.AutoString(),
                  nullable=True),
        sa.Column("reset_token_expires", sa.DateTime(), nullable=True),
        sa.Column(
            "verification_token", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("verification_token_expires", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_table(
        "investorprofile",
        sa.Column("firm_name", sqlmodel.sql.sqltypes.AutoString(),
                  nullable=False),
        sa.Column("bio", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("website", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("location", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("linkedin_url",
                  sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("twitter_url", sqlmodel.sql.sqltypes.AutoString(),
                  nullable=True),
        sa.Column("investment_focus", sa.JSON(), nullable=True),
        sa.Column("preferred_stages", sa.JSON(), nullable=True),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_index(
        op.f("ix_investorprofile_firm_name"),
        "investorprofile",
        ["firm_name"],
        unique=False,
    )
    op.create_table(
        "pitchdeck",
        sa.Column("file_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("filename", sqlmodel.sql.sqltypes.AutoString(),
                  nullable=False),
        sa.Column("file_url", sqlmodel.sql.sqltypes.AutoString(),
                  nullable=False),
        sa.Column("thumbnail_url",
                  sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("file_size", sa.Integer(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("founder_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["founder_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "startup",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(),
                  nullable=False),
        sa.Column(
            "industry",
            sa.Enum(
                "TECHNOLOGY",
                "HEALTHCARE",
                "FINANCE",
                "EDUCATION",
                "RETAIL",
                "MANUFACTURING",
                "REAL_ESTATE",
                "ENERGY",
                "TRANSPORTATION",
                "MEDIA",
                "ENTERTAINMENT",
                "FOOD_BEVERAGE",
                "AGRICULTURE",
                "HOSPITALITY",
                "CONSTRUCTION",
                "TELECOMMUNICATIONS",
                "BIOTECHNOLOGY",
                "AEROSPACE",
                "AUTOMOTIVE",
                "ECOMMERCE",
                "GAMING",
                "CYBERSECURITY",
                "FINTECH",
                "HEALTH_TECH",
                "ED_TECH",
                "OTHER",
                name="industry",
            ),
            nullable=False,
        ),
        sa.Column("location", sqlmodel.sql.sqltypes.AutoString(),
                  nullable=False),
        sa.Column(
            "funding_stage",
            sa.Enum(
                "IDEA",
                "MVP",
                "EARLY_STAGE",
                "PRE_SEED",
                "SEED",
                "SERIES_A",
                "SERIES_B",
                "SERIES_C",
                "IPO",
                "MERGER_ACQUISITION",
                "OTHER",
                name="fundingstage",
            ),
            nullable=False,
        ),
        sa.Column("funding_goal", sa.Float(), nullable=True),
        sa.Column("founded_year",
                  sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("team_size", sa.Integer(), nullable=True),
        sa.Column("website", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("logo_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("pitch_deck_url",
                  sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("demo_video_url",
                  sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("business_model",
                  sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("target_market",
                  sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("competitors", sqlmodel.sql.sqltypes.AutoString(),
                  nullable=True),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("founder_id", sa.Uuid(), nullable=False),
        sa.Column("is_published", sa.Boolean(), nullable=False),
        sa.Column("team_members", sa.JSON(), nullable=True),
        sa.Column("funding", sa.JSON(), nullable=True),
        sa.Column("metrics", sa.JSON(), nullable=True),
        sa.Column("social_media", sa.JSON(), nullable=True),
        sa.Column("contact", sa.JSON(), nullable=True),
        sa.Column("traction", sa.JSON(), nullable=True),
        sa.Column("use_of_funds", sa.JSON(), nullable=True),
        sa.Column("timeline", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["founder_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_startup_is_published"), "startup", ["is_published"], unique=False
    )
    op.create_index(op.f("ix_startup_name"), "startup", ["name"], unique=False)
    op.create_table(
        "pitchmessage",
        sa.Column(
            "message_content", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "status",
            sa.Enum("SENT", "VIEWED", "RESPONDED",
                    "ARCHIVED", name="pitchstatus"),
            nullable=False,
        ),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("sent_at", sa.DateTime(), nullable=False),
        sa.Column("founder_id", sa.Uuid(), nullable=False),
        sa.Column("investor_id", sa.Uuid(), nullable=False),
        sa.Column("pitch_deck_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["founder_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["investor_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["pitch_deck_id"],
            ["pitchdeck.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("pitchmessage")
    op.drop_index(op.f("ix_startup_name"), table_name="startup")
    op.drop_index(op.f("ix_startup_is_published"), table_name="startup")
    op.drop_table("startup")
    op.drop_table("pitchdeck")
    op.drop_index(op.f("ix_investorprofile_firm_name"),
                  table_name="investorprofile")
    op.drop_table("investorprofile")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###
